{"openapi":"3.0.1","info":{"title":"'@project.name@'","description":"'@project.description@'","contact":{"name":"Joe Doe","email":"dumy@dumy"},"version":"'@project.version@'"},"servers":[{"url":"http://localhost:8080","description":"'@project.description@'"}],"paths":{"/fine/state":{"put":{"tags":["fine-controller"],"summary":"Update fine state","description":"Update the state of a fine by providing the fine ID and the new state","operationId":"updateFineState","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FineUpdateStateDTO"}}},"required":true},"responses":{"400":{"description":"Bad Request, invalid input or state transition","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"200":{"description":"Fine state updated successfully","content":{"*/*":{"schema":{"$ref":"#/components/schemas/FineDTO"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}}}}},"/proof/claim":{"post":{"tags":["proof-controller"],"summary":"Create a proof for a claim","description":"Creates a new proof for an existing claim by providing details such as proof path, proof type, and claim ID.","operationId":"createProofForClaim","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProofClaimRequestDto"}}},"required":true},"responses":{"404":{"description":"Claim not found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"400":{"description":"Invalid proof request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"200":{"description":"Proof for claim created successfully","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ProofResponseDto"}}}}}}},"/ping":{"get":{"tags":["ping-controller"],"summary":"Check healthy of the app","description":"If the app it's alive response pong","operationId":"pong","responses":{"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"200":{"description":"Successful operation","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/pageable/fine":{"get":{"tags":["fine-controller"],"summary":"Get all fines","description":"Get all fines","operationId":"getFines","parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"size","in":"query","required":false,"schema":{"type":"integer","format":"int32","default":10}},{"name":"fineState","in":"query","required":false,"schema":{"type":"array","items":{"type":"string","enum":["ON_ASSEMBLY","APPROVED","REJECTED","APPROVED_CHALLENGED","IMPUTED_ON_EXPENSE"]}}},{"name":"sanctionTypes","in":"query","required":false,"schema":{"type":"array","items":{"type":"integer","format":"int64"}}}],"responses":{"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"200":{"description":"Successful operation","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/fine/{id}":{"get":{"tags":["fine-controller"],"summary":"Get one fine","description":"Get fine by id","operationId":"getFineById","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"200":{"description":"Successful operation","content":{"*/*":{"schema":{"type":"string"}}}}}}}},"components":{"schemas":{"FineUpdateStateDTO":{"required":["fineState","id","updatedBy"],"type":"object","properties":{"id":{"type":"integer","format":"int64"},"fineState":{"type":"string","enum":["ON_ASSEMBLY","APPROVED","REJECTED","APPROVED_CHALLENGED","IMPUTED_ON_EXPENSE"]},"updatedBy":{"type":"integer","format":"int32"}}},"ErrorApi":{"type":"object","properties":{"timestamp":{"type":"string"},"status":{"type":"integer","format":"int32"},"error":{"type":"string"},"message":{"type":"string"}}},"FineDTO":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"createdDate":{"type":"string","format":"date-time"},"createdBy":{"type":"integer","format":"int64"},"lastUpdatedAt":{"type":"string","format":"date-time"},"lastUpdatedBy":{"type":"integer","format":"int64"},"plotId":{"type":"integer","format":"int64"},"fineState":{"type":"string","enum":["ON_ASSEMBLY","APPROVED","REJECTED","APPROVED_CHALLENGED","IMPUTED_ON_EXPENSE"]},"sanctionType":{"$ref":"#/components/schemas/SanctionType"},"infractions":{"type":"array","items":{"$ref":"#/components/schemas/ReducedInfractionDTO"}}}},"ReducedInfractionDTO":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"createdDate":{"type":"string","format":"date-time"},"createdBy":{"type":"integer","format":"int64"},"lastUpdatedAt":{"type":"string","format":"date-time"},"lastUpdatedBy":{"type":"integer","format":"int64"},"plotId":{"type":"integer","format":"int64"},"description":{"type":"string"},"infractionState":{"type":"string","enum":["APPROVED","ON_APPEALING","APPEALED","REJECTED"]},"sanctionType":{"$ref":"#/components/schemas/SanctionType"}}},"SanctionType":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"createdDate":{"type":"string","format":"date-time"},"createdBy":{"type":"integer","format":"int64"},"lastUpdatedAt":{"type":"string","format":"date-time"},"lastUpdatedBy":{"type":"integer","format":"int64"},"name":{"type":"string"},"description":{"type":"string"}}},"ProofClaimRequestDto":{"required":["claim_id","created_by","proof_path","proof_type"],"type":"object","properties":{"proof_path":{"maxLength":255,"minLength":5,"type":"string"},"proof_type":{"type":"string","enum":["TEXT","IMAGE","DOCUMENT"]},"proof_text":{"maxLength":500,"minLength":10,"type":"string"},"claim_id":{"type":"integer","format":"int64"},"created_by":{"type":"integer","format":"int64"}}},"ProofResponseDto":{"type":"object","properties":{"proof_path":{"type":"string"},"proof_type":{"type":"string","enum":["TEXT","IMAGE","DOCUMENT"]},"proof_context":{"type":"string","enum":["CLAIM_JUSTIFICATION","DEFENSE"]},"proof_text":{"type":"string"}}}}}}